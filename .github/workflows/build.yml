name: Build and Package cppgen

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.22.0'

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential fakeroot rpm

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install cmake

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
          choco install nsis -y

      - name: Configure (CMake)
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build (CMake)
        run: cmake --build build --config Release

      - name: Package (CMake + CPack)
        run: |
          cd build
          cpack

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cppgen-${{ runner.os }}
          path: |
            build/*.deb
            build/*.rpm
            build/*.exe
            build/*.dmg
            build/*.zip
